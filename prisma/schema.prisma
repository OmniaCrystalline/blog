generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid()) @map("_id")
  userId             String  
  type               String
  provider           String
  providerAccountId  String  
  refresh_token      String? 
  access_token       String? 
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? 
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  //@@map("accounts")
}
 
model Session {
  id           String   @id @default(cuid()) @map("_id")
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  //@@map("sessions")
}
 
model User {
  id            String    @id @default(cuid()) @map("_id")
  name          String? @unique
  email         String   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
  post Post[]
  comments Comment []
 
  @@map("users")
}
 
model VerificationToken {
  identifier String @id @map("_id")
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verificationtokens")
}


model Category {
    id String @id @default(cuid()) @map("_id")
    slug String @unique
    title String
    img String?
    Posts Post[]
    color String @default(cuid()) 
}

model Post {
    id String @id @default(cuid()) @map("_id")
    createdAt DateTime @default(now())
    slug String @unique
    title String
    desc String
    img String?
    views Int @default(0)
    catSlag String
    cat Category @relation(fields: [catSlag], references: [slug])
    userEmail String
    user User @relation(fields: [userEmail], references: [email]) 
    comments Comment[]
}

model Comment {
    id String @id @default(cuid()) @map("_id")
    createdAt DateTime @default(now())
    desc String
    userEmail String
    user User @relation(fields: [userEmail], references: [email]) 
    postSlug String
    post Post @relation(fields: [postSlug], references: [slug])
}
